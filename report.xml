<?xml version="1.0" encoding="UTF-8"?>

<checkstyle version="5.0">
  <file name="cmd/frontend.go">
    <error column="1" line="121" message="calculated cyclomatic complexity for function validateSetup is 15, max is 10" severity="error" source="cyclop"></error>
    <error column="12" line="88" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;framework type is required. Usage: gogen frontend &lt;framework-type&gt;\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="11" line="125" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;node.js is required but not installed. Please install Node.js from https://nodejs.org/\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="11" line="128" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;npm is required but not installed. Please install npm\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="11" line="132" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;bun is required but not installed. Please install Bun from https://bun.sh/\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="135" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported runtime: %s. Supported runtimes: node, bun\&#34;, fm.Runtime)&#34;" severity="error" source="err113"></error>
    <error column="10" line="156" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported frontend framework: %s\&#34;, fm.FrameworkType)&#34;" severity="error" source="err113"></error>
    <error column="10" line="38" message="cli.Command is missing fields Aliases, UsageText, Args, Category, BashComplete, Before, After, OnUsageError, Subcommands, SkipFlagParsing, HideHelp, HideHelpCommand, Hidden, UseShortOptionHandling, HelpName, CustomHelpTemplate" severity="error" source="exhaustruct"></error>
    <error column="5" line="61" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Value, Destination, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="67" message="cli.BoolFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, EnvVars, Count, DisableDefaultText, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="73" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="79" message="cli.BoolFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, EnvVars, Count, DisableDefaultText, Action" severity="error" source="exhaustruct"></error>
    <error column="1" line="13" message="Comment should end in a period" severity="error" source="godot"></error>
    <error column="1" line="111" message="The line is 125 characters long, which exceeds the maximum of 120 characters." severity="error" source="lll"></error>
    <error column="1" line="1" message="package-comments: should have a package comment" severity="warning" source="revive"></error>
    <error column="6" line="19" message="exported: exported type FrontendManager should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="27" message="exported: exported function NewFrontendManager should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="37" message="exported: exported function FrontendCommand should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="16" line="86" message="parameter name &#39;c&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
  </file>
  <file name="cmd/init.go">
    <error column="10" line="8" message="cli.App is missing fields HelpName, UsageText, Args, ArgsUsage, DefaultCommand, Flags, EnableBashCompletion, HideHelp, HideHelpCommand, HideVersion, BashComplete, Before, After, Action, CommandNotFound, OnUsageError, InvalidFlagAccessHandler, Compiled, Authors, Copyright, Reader, Writer, ErrWriter, ExitErrHandler, Metadata, ExtraInfo, CustomAppHelpTemplate, SliceFlagSeparator, DisableSliceFlagSeparator, UseShortOptionHandling, Suggest, AllowExtFlags, SkipFlagParsing" severity="error" source="exhaustruct"></error>
  </file>
  <file name="cmd/install.go">
    <error column="10" line="76" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported installation method: %s\&#34;, i.Method)&#34;" severity="error" source="err113"></error>
    <error column="10" line="97" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported operating system: %s\&#34;, runtime.GOOS)&#34;" severity="error" source="err113"></error>
    <error column="10" line="136" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;nix is not installed on this system\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="145" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;homebrew is not installed on this system\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="206" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;invalid download URL: %s\&#34;, u.String())&#34;" severity="error" source="err113"></error>
    <error column="10" line="216" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;failed to download: HTTP %d\&#34;, resp.StatusCode)&#34;" severity="error" source="err113"></error>
    <error column="23" line="213" message="Error return value of `resp.Body.Close` is not checked" severity="error" source="errcheck"></error>
    <error column="17" line="223" message="Error return value of `out.Close` is not checked" severity="error" source="errcheck"></error>
    <error column="10" line="34" message="cli.Command is missing fields Aliases, UsageText, Args, ArgsUsage, Category, BashComplete, Before, After, OnUsageError, Subcommands, SkipFlagParsing, HideHelp, HideHelpCommand, Hidden, UseShortOptionHandling, HelpName, CustomHelpTemplate" severity="error" source="exhaustruct"></error>
    <error column="5" line="40" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="46" message="cli.BoolFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, EnvVars, Count, DisableDefaultText, Action" severity="error" source="exhaustruct"></error>
    <error column="13" line="123" message="G302: Expect file permissions to be 0600 or less" severity="error" source="gosec"></error>
    <error column="14" line="219" message="G304: Potential file inclusion via variable" severity="error" source="gosec"></error>
    <error column="23" line="209" message="net/http.Get must not be called. use net/http.NewRequestWithContext and (*net/http.Client).Do(*http.Request)" severity="error" source="noctx"></error>
    <error column="2" line="18" message="exported: exported const PlatformWindows should have comment (or a comment on this block) or be unexported" severity="warning" source="revive"></error>
    <error column="6" line="21" message="exported: exported type Installer should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="26" message="exported: exported function NewInstaller should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="33" message="exported: exported function InstallCommand should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="2" line="183" message="variable name &#39;os&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="2" line="200" message="variable name &#39;u&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="10" line="211" message="error returned from external package is unwrapped: sig: func net/http.Get(url string) (resp *net/http.Response, err error)" severity="error" source="wrapcheck"></error>
    <error column="10" line="221" message="error returned from external package is unwrapped: sig: func os.Create(name string) (*os.File, error)" severity="error" source="wrapcheck"></error>
  </file>
  <file name="cmd/new.go">
    <error column="12" line="128" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;runtime flag is only applicable when template is &#39;web&#39;\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="177" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;frontend flag is only applicable when template is &#39;web&#39;\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="181" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;TypeScript flag is only applicable when frontend is specified\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="185" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;tailwind flag is only applicable when frontend is specified\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="240" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported template: %s\&#34;, pc.Template)&#34;" severity="error" source="err113"></error>
    <error column="10" line="49" message="cli.Command is missing fields Aliases, UsageText, Args, ArgsUsage, Category, BashComplete, Before, After, OnUsageError, Subcommands, SkipFlagParsing, HideHelp, HideHelpCommand, Hidden, UseShortOptionHandling, HelpName, CustomHelpTemplate" severity="error" source="exhaustruct"></error>
    <error column="5" line="55" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Hidden, HasBeenSet, Value, Destination, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="61" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Value, Destination, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="66" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="78" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Value, Destination, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="83" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Value, Destination, Aliases, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="87" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, Aliases, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="92" message="cli.BoolFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, Aliases, EnvVars, Count, DisableDefaultText, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="97" message="cli.BoolFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, Aliases, EnvVars, Count, DisableDefaultText, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="102" message="cli.StringFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Value, Destination, Aliases, EnvVars, TakesFile, Action" severity="error" source="exhaustruct"></error>
    <error column="5" line="106" message="cli.BoolFlag is missing fields Category, DefaultText, FilePath, Required, Hidden, HasBeenSet, Destination, Aliases, EnvVars, Count, DisableDefaultText, Action" severity="error" source="exhaustruct"></error>
    <error column="1" line="137" message="unexported method &#34;execute&#34; for struct &#34;ProjectCreator&#34; should be placed after the exported method &#34;ChangeToProjectDirectory&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="175" message="unexported method &#34;validate&#34; for struct &#34;ProjectCreator&#34; should be placed after the exported method &#34;ChangeToProjectDirectory&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="191" message="unexported method &#34;createProjectDirectory&#34; for struct &#34;ProjectCreator&#34; should be placed after the exported method &#34;ChangeToProjectDirectory&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="131" message="The line is 152 characters long, which exceeds the maximum of 120 characters." severity="error" source="lll"></error>
    <error column="1" line="236" message="The line is 145 characters long, which exceeds the maximum of 120 characters." severity="error" source="lll"></error>
    <error column="6" line="14" message="exported: exported type ProjectCreator should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="28" message="exported: exported function NewProjectCreator should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="48" message="exported: exported function NewCommand should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="198" message="exported: exported method ProjectCreator.ChangeToProjectDirectory should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="16" line="112" message="parameter name &#39;c&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="2" line="230" message="variable name &#39;pg&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="10" line="234" message="error returned from external package is unwrapped: sig: func (*github.com/luigimorel/gogen/internal.ProjectGenerator).CreateCLIProject(projectName string, moduleName string) error" severity="error" source="wrapcheck"></error>
    <error column="10" line="238" message="error returned from external package is unwrapped: sig: func (*github.com/luigimorel/gogen/internal.ProjectGenerator).CreateAPIProject(projectName string, moduleName string, router string) error" severity="error" source="wrapcheck"></error>
  </file>
  <file name="cmd/router.go">
    <error column="12" line="60" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;router type is required. Usage: gogen router &lt;router-type&gt;\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="94" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;no go.mod found - please run this command in a Go project directory\&#34;)&#34;" severity="error" source="err113"></error>
    <error column="10" line="113" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported router type: %s\&#34;, r.Type)&#34;" severity="error" source="err113"></error>
    <error column="10" line="32" message="cli.Command is missing fields Aliases, UsageText, Args, Category, BashComplete, Before, After, OnUsageError, Subcommands, SkipFlagParsing, HideHelp, HideHelpCommand, Hidden, UseShortOptionHandling, HelpName, CustomHelpTemplate" severity="error" source="exhaustruct"></error>
    <error column="1" line="11" message="Comment should end in a period" severity="error" source="godot"></error>
    <error column="2" line="16" message="var-naming: const RouterHttpRouter should be RouterHTTPRouter" severity="warning" source="revive"></error>
    <error column="6" line="19" message="exported: exported type Router should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="24" message="exported: exported function NewRouter should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="31" message="exported: exported function RouterCommand should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="18" line="340" message="var-naming: method generateHttpRouterContent should be generateHTTPRouterContent" severity="warning" source="revive"></error>
    <error column="16" line="58" message="parameter name &#39;c&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
  </file>
  <file name="consants/constants.go">
    <error column="1" line="1" message="package-comments: should have a package comment" severity="warning" source="revive"></error>
    <error column="2" line="4" message="exported: exported const APIDir should have comment (or a comment on this block) or be unexported" severity="warning" source="revive"></error>
  </file>
  <file name="internal/air.go">
    <error column="52" line="71" message="Magic number: 0600, in &lt;argument&gt; detected" severity="error" source="mnd"></error>
    <error column="1" line="1" message="package-comments: should have a package comment" severity="warning" source="revive"></error>
    <error column="1" line="10" message="exported: exported method ProjectGenerator.CreateAirFile should have comment or be unexported" severity="warning" source="revive"></error>
  </file>
  <file name="internal/api_routes.go">
    <error column="6" line="3" message="exported: exported type RouterGenerator should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="5" message="exported: exported function NewRouterGenerator should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="28" line="97" message="var-naming: method generateHttpRouterContent should be generateHTTPRouterContent" severity="warning" source="revive"></error>
  </file>
  <file name="internal/create_frontend.go">
    <error column="10" line="79" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported frontend framework: %s\&#34;, framework)&#34;" severity="error" source="err113"></error>
    <error column="2" line="23" message="use of `fmt.Printf` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$`" severity="error" source="forbidigo"></error>
    <error column="3" line="37" message="use of `fmt.Printf` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$`" severity="error" source="forbidigo"></error>
    <error column="2" line="119" message="use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$`" severity="error" source="forbidigo"></error>
    <error column="3" line="35" message="Line contains TODO/BUG/FIXME: &#34;TODO: Remove directory if it exists?&#34;" severity="error" source="godox"></error>
    <error column="9" line="76" message="G204: Subprocess launched with variable" severity="error" source="gosec"></error>
    <error column="11" line="136" message="G204: Subprocess launched with variable" severity="error" source="gosec"></error>
    <error column="10" line="170" message="G204: Subprocess launched with variable" severity="error" source="gosec"></error>
    <error column="1" line="51" message="The line is 151 characters long, which exceeds the maximum of 120 characters." severity="error" source="lll"></error>
    <error column="1" line="72" message="The line is 125 characters long, which exceeds the maximum of 120 characters." severity="error" source="lll"></error>
    <error column="3" line="138" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="22" line="140" message="os/exec.Command must not be called. use os/exec.CommandContext" severity="error" source="noctx"></error>
    <error column="22" line="147" message="os/exec.Command must not be called. use os/exec.CommandContext" severity="error" source="noctx"></error>
    <error column="22" line="153" message="os/exec.Command must not be called. use os/exec.CommandContext" severity="error" source="noctx"></error>
    <error column="8" line="36" message="avoid inline error handling using `if err := ...; err != nil`; use plain assignment `err := ...`" severity="error" source="noinlineerr"></error>
    <error column="5" line="86" message="avoid inline error handling using `if err := ...; err != nil`; use plain assignment `err := ...`" severity="error" source="noinlineerr"></error>
    <error column="6" line="92" message="avoid inline error handling using `if err := ...; err != nil`; use plain assignment `err := ...`" severity="error" source="noinlineerr"></error>
    <error column="1" line="22" message="exported: exported method ProjectGenerator.CreateFrontendProject should have comment or be unexported" severity="warning" source="revive"></error>
  </file>
  <file name="internal/docker.go">
    <error column="5" line="11" message="runTimeContent is a global variable" severity="error" source="gochecknoglobals"></error>
    <error column="64" line="230" message="Magic number: 0600, in &lt;argument&gt; detected" severity="error" source="mnd"></error>
    <error column="72" line="234" message="Magic number: 0600, in &lt;argument&gt; detected" severity="error" source="mnd"></error>
    <error column="1" line="47" message="exported: exported method ProjectGenerator.CreateDockerfile should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="241" message="exported: exported method ProjectGenerator.CreateDockerComposeFile should have comment or be unexported" severity="warning" source="revive"></error>
  </file>
  <file name="internal/env-file.go">
    <error column="12" line="32" message="G301: Expect directory permissions to be 0750 or less" severity="error" source="gosec"></error>
    <error column="12" line="116" message="G301: Expect directory permissions to be 0750 or less" severity="error" source="gosec"></error>
    <error column="1" line="11" message="exported: exported method ProjectGenerator.CreateEnvFile should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="47" message="exported: exported method ProjectGenerator.CreateEnvConfig should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="74" message="exported: exported method ProjectGenerator.CreateGitignoreFile should have comment or be unexported" severity="warning" source="revive"></error>
  </file>
  <file name="internal/git.go">
    <error column="1" line="9" message="exported: exported method ProjectGenerator.InitGitRepository should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="26" message="exported: exported method ProjectGenerator.RemoveGitRepository should have comment or be unexported" severity="warning" source="revive"></error>
  </file>
  <file name="internal/llm.go">
    <error column="1" line="39" message="calculated cyclomatic complexity for function generateCursorContent is 17, max is 10" severity="error" source="cyclop"></error>
    <error column="1" line="308" message="calculated cyclomatic complexity for function generateJetbrainsContent is 15, max is 10" severity="error" source="cyclop"></error>
    <error column="10" line="33" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported template: %s\&#34;, template)&#34;" severity="error" source="err113"></error>
    <error column="13" line="24" message="G301: Expect directory permissions to be 0750 or less" severity="error" source="gosec"></error>
    <error column="18" line="78" message="string-format: fmt.Sprintf can be replaced with string concatenation" severity="error" source="perfsprint"></error>
    <error column="18" line="319" message="string-format: fmt.Sprintf can be replaced with string concatenation" severity="error" source="perfsprint"></error>
    <error column="6" line="8" message="exported: exported type LLMTemplate should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="11" message="exported: exported function NewLLMTemplate should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="15" message="exported: exported method LLMTemplate.CreateTemplate should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="74" line="203" message="unused-parameter: parameter &#39;router&#39; seems to be unused, consider removing or renaming it as _" severity="warning" source="revive"></error>
  </file>
  <file name="internal/project.go">
    <error column="1" line="272" message="calculated cyclomatic complexity for function createAPIProjectInDir is 21, max is 10" severity="error" source="cyclop"></error>
    <error column="10" line="258" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;warning: failed to create env file in api: %v\&#34;, err)&#34;" severity="error" source="err113"></error>
    <error column="10" line="262" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;warning: failed to create .gitignore file in api: %v\&#34;, err)&#34;" severity="error" source="err113"></error>
    <error column="3" line="134" message="use of `fmt.Printf` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$`" severity="error" source="forbidigo"></error>
    <error column="1" line="32" message="unexported method &#34;setModuleName&#34; for struct &#34;ProjectGenerator&#34; should be placed after the exported method &#34;CreateAPIProject&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="39" message="unexported method &#34;setDefaultPackages&#34; for struct &#34;ProjectGenerator&#34; should be placed after the exported method &#34;CreateAPIProject&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="48" message="unexported method &#34;generateMainContent&#34; for struct &#34;ProjectGenerator&#34; should be placed after the exported method &#34;CreateAPIProject&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="181" message="unexported method &#34;setupAPIProject&#34; for struct &#34;ProjectGenerator&#34; should be placed after the exported method &#34;CreateAPIProject&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="212" message="unexported method &#34;setupFrontendProject&#34; for struct &#34;ProjectGenerator&#34; should be placed after the exported method &#34;CreateAPIProject&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="236" message="unexported method &#34;createFrontendConfigFiles&#34; for struct &#34;ProjectGenerator&#34; should be placed after the exported method &#34;CreateAPIProject&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="256" message="unexported method &#34;createConfigFiles&#34; for struct &#34;ProjectGenerator&#34; should be placed after the exported method &#34;CreateAPIProject&#34;" severity="error" source="funcorder"></error>
    <error column="1" line="182" message="The line is 121 characters long, which exceeds the maximum of 120 characters." severity="error" source="lll"></error>
    <error column="1" line="217" message="The line is 156 characters long, which exceeds the maximum of 120 characters." severity="error" source="lll"></error>
    <error column="2" line="36" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="2" line="146" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="15" line="273" message="string-format: fmt.Sprintf can be replaced with string concatenation" severity="error" source="perfsprint"></error>
    <error column="6" line="11" message="exported: exported type ProjectGenerator should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="6" line="15" message="exported: exported type WebProjectConfig should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="26" message="exported: exported function NewProjectGenerator should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="59" line="84" message="unused-parameter: parameter &#39;moduleName&#39; seems to be unused, consider removing or renaming it as _" severity="warning" source="revive"></error>
    <error column="1" line="149" message="exported: exported method ProjectGenerator.CreateWebProject should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="164" message="exported: exported method ProjectGenerator.CreateWebProjectWithConfig should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="268" message="exported: exported method ProjectGenerator.CreateAPIProject should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="2" line="165" message="variable name &#39;dm&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="10" line="130" message="error returned from external package is unwrapped: sig: func os.WriteFile(name string, data []byte, perm os.FileMode) error" severity="error" source="wrapcheck"></error>
    <error column="10" line="314" message="error returned from external package is unwrapped: sig: func os.WriteFile(name string, data []byte, perm os.FileMode) error" severity="error" source="wrapcheck"></error>
    <error column="10" line="318" message="error returned from external package is unwrapped: sig: func os.WriteFile(name string, data []byte, perm os.FileMode) error" severity="error" source="wrapcheck"></error>
  </file>
  <file name="internal/tailwindcss.go">
    <error column="10" line="80" message="do not define dynamic errors, use wrapped static errors instead: &#34;fmt.Errorf(\&#34;unsupported framework: %s\&#34;, framework)&#34;" severity="error" source="err113"></error>
    <error column="2" line="42" message="use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$`" severity="error" source="forbidigo"></error>
    <error column="2" line="56" message="use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$`" severity="error" source="forbidigo"></error>
    <error column="27" line="84" message="Function &#39;updateConfigFile&#39; is too long (75 &gt; 60)" severity="error" source="funlen"></error>
    <error column="26" line="179" message="G304: Potential file inclusion via variable" severity="error" source="gosec"></error>
    <error column="6" line="9" message="exported: exported type TailwindConfig should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="16" message="exported: exported function NewTailwindConfig should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="30" message="exported: exported method TailwindConfig.InstallTailwindCSS should have comment or be unexported" severity="warning" source="revive"></error>
  </file>
  <file name="internal/utils.go">
    <error column="6" line="8" message="exported: exported type DirectoryManager should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="12" message="exported: exported function NewDirectoryManager should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="20" message="exported: exported method DirectoryManager.ChangeToDir should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="1" line="24" message="exported: exported method DirectoryManager.RootDir should have comment or be unexported" severity="warning" source="revive"></error>
    <error column="9" line="21" message="error returned from external package is unwrapped: sig: func os.Chdir(dir string) error" severity="error" source="wrapcheck"></error>
    <error column="9" line="25" message="error returned from external package is unwrapped: sig: func os.Chdir(dir string) error" severity="error" source="wrapcheck"></error>
  </file>
</checkstyle>
